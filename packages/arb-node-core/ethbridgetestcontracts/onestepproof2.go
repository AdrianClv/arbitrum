// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"_machineFields\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[5]\",\"name\":\"fields\",\"type\":\"bytes32[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"3a06aeec": "executeStep(bytes32[3],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b5061391b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a06aeec1461003b578063793deea314610148575b600080fd5b610100600480360360a081101561005157600080fd5b81018160808101606082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b9193909290916020810190356401000000008111156100c157600080fd5b8201836020820111156100d357600080fd5b803590602001918460018302840111640100000000831117156100f557600080fd5b509092509050610311565b6040516001600160401b0383168152602081018260a080838360005b8381101561013457818101518382015260200161011c565b505050509050019250505060405180910390f35b6101ee6004803603602081101561015e57600080fd5b81019060208101813564010000000081111561017957600080fd5b82018360208201111561018b57600080fd5b803590602001918460018302840111640100000000831117156101ad57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103c3945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561023a578181015183820152602001610222565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015610279578181015183820152602001610261565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156102b85781810151838201526020016102a0565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156102f75781810151838201526020016102df565b505050509050019850505050505050505060405180910390f35b600061031b61370a565b610323613728565b604080516020601f890181900481028201810183528882526103a0928b3592828d013592918d0135918c908c908190840183828082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284376000920191909152506103ff92505050565b90506103ab816108b9565b6103b481610cc4565b92509250509550959350505050565b6060806060806103d16137ae565b6103da86610d27565b80516020820151604083015160609093015191975095509093509150505b9193509193565b610407613728565b60008360008151811061041657fe5b602001015160f81c60f81b60f81c905060008460018151811061043557fe5b602001015160f81c60f81b60f81c905060008560028151811061045457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561047e57600080fd5b506040519080825280602002602001820160405280156104b857816020015b6104a56137d6565b81526020019060019003908161049d5790505b50905060608360040160ff166001600160401b03811180156104d957600080fd5b5060405190808252806020026020018201604052801561051357816020015b6105006137d6565b8152602001906001900390816104f85790505b50905060005b8560ff1681101561054f5761052e8a85610e1f565b84838151811061053a57fe5b60209081029190910101529350600101610519565b5060005b8460ff16811015610589576105688a85610e1f565b83838151811061057457fe5b60209081029190910101529350600101610553565b50610592613813565b61059c8a85610fe1565b90945090506105a9613728565b604051806101c001604052808381526020016105c484611092565b81526020018f81526020018e81526020018d815260200160006001600160401b0316815260200160405180604001604052808a60ff16815260200187815250815260200160405180604001604052808960ff1681526020018681525081526020018c878151811061063157fe5b602001015160f81c60f81b60f81c60ff16600114151581526020018960ff1681526020018c81526020018660010181526020018b815260200160001515815250905060008b868151811061068157fe5b01602001516001969096019560f81c90508015806106a257508060ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b8152509061074f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107145781810151838201526020016106fc565b50505050905090810190601f1680156107415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107586137d6565b60ff82166107755782515161076e908b90611106565b9050610815565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906107e55760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b506108128a8460000151600001518860018d0360ff168151811061080557fe5b602002602001015161116a565b90505b61081e816111f0565b83515260005b828a0360ff168110156108635761085b87828151811061084057fe5b6020026020010151856000015161135d90919063ffffffff16565b600101610824565b5060005b8860ff168110156108a45761089c86828151811061088157fe5b6020026020010151856000015161137790919063ffffffff16565b600101610867565b50919f9e505050505050505050505050505050565b600080600061387e6108d285610120015160ff16611391565b935093509350935060008411806108ec5750846101000151155b80156108fd575060c0850151518410155b8061092457508461010001518015610913575083155b8015610924575060c0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b815250906109935760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b5060e0850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a085760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b5060c085015151841115610ac557610a26610a216114a1565b6111f0565b610a378660200151602001516111f0565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610aaa5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b50610ab68560056114e8565b50610ac08561155c565b610b84565b60e085015151831115610b5f57610add610a216114a1565b610aee8660200151604001516111f0565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610aaa5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b610b6985836114e8565b15610b7757610ac08561155c565b610b84858263ffffffff16565b846101a0015115610c275760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051908201209086015160c001511415610beb57610be68560200151611567565b610c27565b60006101a0860152602085015160c081015190526101008501518015610c0f575083155b610c1d5760c0850151600090525b60e0850151600090525b60005b60c086015151811015610c7157610c698660c00151602001518281518110610c4e57fe5b6020026020010151876020015161135d90919063ffffffff16565b600101610c2a565b5060005b60e086015151811015610cbc57610cb48660e00151602001518281518110610c9957fe5b6020026020010151876020015161137790919063ffffffff16565b600101610c75565b505050505050565b6000610cce61370a565b8260a001516040518060a00160405280610ceb8660000151611572565b8152602001610cfd8660200151611572565b81526020018560400151815260200185606001518152602001856080015181525091509150915091565b610d2f6137ae565b6060610d6e8384600081518110610d4257fe5b602001015160f81c60f81b85600181518110610d5a57fe5b01602001516001600160f81b03191661164c565b90506060610d9b8485600181518110610d8357fe5b602001015160f81c60f81b86600281518110610d5a57fe5b90506060610dc88586600281518110610db057fe5b602001015160f81c60f81b87600381518110610d5a57fe5b90506060610df58687600381518110610ddd57fe5b602001015160f81c60f81b88600481518110610d5a57fe5b6040805160808101825295865260208601949094529284019190915250606082015290505b919050565b6000610e296137d6565b83518310610e6f576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b600080610e7c86866116e9565b91509150610e88611710565b60ff168160ff161415610ebc576000610ea18784611715565b909350905082610eb082611783565b94509450505050610fda565b610ec4611843565b60ff168160ff161415610ee657610edb8683611848565b935093505050610fda565b610eee6118ea565b60ff168160ff161415610f16576000610f078784611715565b909350905082610eb0826118ef565b610f1e6119db565b60ff168160ff161415610f3557610edb86836119e0565b610f3d611a75565b60ff168160ff1610158015610f5e5750610f55611a7a565b60ff168160ff16105b15610f9a576000610f6d611a75565b820390506060610f7e828986611a7f565b909450905083610f8d82611b27565b9550955050505050610fda565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000610feb613813565b610ff3613813565b60006101008201819052806110088787611715565b909650915061101787876119e0565b6020850152955061102887876119e0565b604085015295506110398787610e1f565b6060850152955061104a8787610e1f565b6080850152955061105b8787611715565b60a0850152955061106c8787611715565b909650905061107b8787610e1f565b60e085015291835260c08301529590945092505050565b61109a613813565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61110e6137d6565b6040805160608101825260ff85168152602080820185905282516000808252918101845261116193830191611159565b6111466137d6565b81526020019060019003908161113e5790505b509052611c68565b90505b92915050565b6111726137d6565b604080516001808252818301909252606091816020015b6111916137d6565b81526020019060019003908161118957905050905082816000815181106111b457fe5b60200260200101819052506111e560405180606001604052808760ff16815260200186815260200183815250611c68565b9150505b9392505050565b60006111fa611710565b60ff16826080015160ff16141561121d57815161121690611cf8565b9050610e1a565b611225611843565b60ff16826080015160ff161415611243576112168260200151611d1c565b61124b6119db565b60ff16826080015160ff16141561126d57815160a08301516112169190611e11565b611275611a75565b60ff16826080015160ff1614156112ae5761128e6137d6565b61129b8360400151611e5f565b90506112a6816111f0565b915050610e1a565b6112b6611fd4565b60ff16826080015160ff1614156112cf57508051610e1a565b6112d76118ea565b60ff16826080015160ff16141561131c575060608082015160408051607b60208083019190915281830193909352815180820383018152930190528151910120610e1a565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b61136b826020015182611fd9565b82602001819052505050565b611385826040015182611fd9565b82604001819052505050565b6000808061387e60a18514156113b657506002925060009150600a90506120576103f8565b60a28514156113d457506002925060009150600a905061210b6103f8565b60a38514156113f257506002925060009150600a905061219d6103f8565b60a4851415611410575060039250600091506064905061222f6103f8565b60a585141561142e575060039250600091506064905061231c6103f8565b60a685141561144c57506003925060009150606490506123ed6103f8565b607085141561146a57506002925060009150606490506124ac6103f8565b60405162461bcd60e51b815260040180806020018281038252602c8152602001806138ba602c913960400191505060405180910390fd5b6114a96137d6565b604080516000808252602082019092526114e3916114dd565b6114ca6137d6565b8152602001906001900390816114c25790505b50611b27565b905090565b6000816001600160401b0316836020015160a00151101561152b575060a082810180516005016001600160401b0316905260208301516000199101526001611164565b5060a080830180516001600160401b0390840181169091526020840151909101805191831690910390526000611164565b60016101a090910152565b600161010090910152565b60006002826101000151141561158a57506000610e1a565b600182610100015114156115a057506001610e1a565b815160208301516115b0906111f0565b6115bd84604001516111f0565b6115ca85606001516111f0565b6115d786608001516111f0565b8660a001518760c001516115ee8960e001516111f0565b6040516020018089815260200188815260200187815260200186815260200185815260200184815260200183815260200182815260200198505050505050505050604051602081830303815290604052805190602001209050610e1a565b606060f883811c9083901c81900360ff169082826001600160401b038111801561167557600080fd5b5060405190808252806020026020018201604052801561169f578160200160208202803683370190505b50905060005b838110156116de576116bc88828501602002612642565b60001b8282815181106116cb57fe5b60209081029190910101526001016116a5565b509695505050505050565b600080826001018484815181106116fc57fe5b016020015190925060f81c90509250929050565b600090565b6000808284511015801561172d575060208385510310155b61176a576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b602083016117788585612682565b915091509250929050565b61178b6137d6565b6040805160c08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916117e1565b6117ce6137d6565b8152602001906001900390816117c65790505b5090528152602001600060405190808252806020026020018201604052801561182457816020015b6118116137d6565b8152602001906001900390816118095790505b5081526000602082018190526040820152600160609091015292915050565b600190565b60006118526137d6565b8260008061185e6137d6565b600061186a89866116e9565b909550935061187989866116e9565b9095509250600160ff8516141561189a576118948986610e1f565b90955091505b6118a489866126db565b9095509050600160ff851614156118cf57846118c184838561116a565b965096505050505050610fda565b846118da8483611106565b9650965050505050509250929050565b600c90565b6118f76137d6565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561193e57600080fd5b5060405190808252806020026020018201604052801561197857816020015b6119656137d6565b81526020019060019003908161195d5790505b509052815260200160006040519080825280602002602001820160405280156119bb57816020015b6119a86137d6565b8152602001906001900390816119a05790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006119ea6137d6565b828451101580156119ff575060408385510310155b611a3c576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b600080611a4986866126db565b9094509150611a588685611715565b909450905083611a6883836126ec565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b0381118015611a9e57600080fd5b50604051908082528060200260200182016040528015611ad857816020015b611ac56137d6565b815260200190600190039081611abd5790505b50905060005b8760ff168160ff161015611b1a57611af68784610e1f565b838360ff1681518110611b0557fe5b60209081029190910101529250600101611ade565b5090969095509350505050565b611b2f6137d6565b611b3982516127ab565b611b8a576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b8351811015611bc157838181518110611ba457fe5b602002602001015160a00151820191508080600101915050611b8f565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b0381118015611c0957600080fd5b50604051908082528060200260200182016040528015611c4357816020015b611c306137d6565b815260200190600190039081611c285790505b5090528152602081019490945260006040850152600360608501526080909301525090565b611c706137d6565b6040518060c001604052806000815260200183815260200160006001600160401b0381118015611c9f57600080fd5b50604051908082528060200260200182016040528015611cd957816020015b611cc66137d6565b815260200190600190039081611cbe5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b6000600282604001515110611d2d57fe5b604082015151611d9057611d3f611843565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b81526001018281526020019350505050604051602081830303815290604052805190602001209050610e1a565b611d98611843565b8260000151611dbe8460400151600081518110611db157fe5b60200260200101516111f0565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000611e1b611a75565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b611e676137d6565b600882511115611eb5576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b0381118015611ece57600080fd5b50604051908082528060200260200182016040528015611ef8578160200160208202803683370190505b508051909150600160005b82811015611f5b57611f1a868281518110611db157fe5b848281518110611f2657fe5b602002602001018181525050858181518110611f3e57fe5b602002602001015160a00151820191508080600101915050611f03565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015611f9d578181015183820152602001611f85565b5050505090500192505050604051602081830303815290604052805190602001209050611fca81836126ec565b9695505050505050565b606490565b611fe16137d6565b6040805160028082526060828101909352816020015b611fff6137d6565b815260200190600190039081611ff7579050509050828160008151811061202257fe5b6020026020010181905250838160018151811061203b57fe5b602002602001018190525061204f81611e5f565b949350505050565b61205f6137d6565b61206c8260c001516127b2565b90506120766137d6565b6120838360c001516127b2565b905061208e826127f4565b15806120a0575061209e81612812565b155b156120b5576120ae8361281f565b5050612108565b8151600160401b116120ca576120ae8361281f565b60006120ec826060015184600001516120e7876101800151610d27565b612828565b90506121048460c001516120ff83611783565b61284a565b5050505b50565b6121136137d6565b6121208260c001516127b2565b905061212a6137d6565b6121378360c001516127b2565b9050612142826127f4565b1580612154575061215281612812565b155b15612162576120ae8361281f565b815167fffffffffffffff91161217b576120ae8361281f565b60006120ec82606001518460000151612198876101800151610d27565b612874565b6121a56137d6565b6121b28260c001516127b2565b90506121bc6137d6565b6121c98360c001516127b2565b90506121d4826127f4565b15806121e657506121e481612812565b155b156121f4576120ae8361281f565b815167ffffffffffffffe11161220d576120ae8361281f565b60006120ec8260600151846000015161222a876101800151610d27565b6129d3565b6122376137d6565b6122448260c001516127b2565b905061224e6137d6565b61225b8360c001516127b2565b90506122656137d6565b6122728460c001516127b2565b905061227d836127f4565b158061228f575061228d82612b06565b155b806122a0575061229e81612812565b155b156122b6576122ae8461281f565b505050612108565b8251600160401b1115806122cd5750815161010011155b156122db576122ae8461281f565b60006123028260600151856000015185600001516122fd896101800151610d27565b612b11565b90506123158560c001516120ff836118ef565b5050505050565b6123246137d6565b6123318260c001516127b2565b905061233b6137d6565b6123488360c001516127b2565b90506123526137d6565b61235f8460c001516127b2565b905061236a836127f4565b158061237c575061237a82612b06565b155b8061238d575061238b81612812565b155b1561239b576122ae8461281f565b825167fffffffffffffff91115806123b857508151600160401b11155b156123c6576122ae8461281f565b60006123028260600151856000015185600001516123e8896101800151610d27565b612b5a565b6123f56137d6565b6124028260c001516127b2565b905061240c6137d6565b6124198360c001516127b2565b90506124236137d6565b6124308460c001516127b2565b905061243b836127f4565b158061244d575061244b82612b06565b155b8061245e575061245c81612812565b155b1561246c576122ae8461281f565b825167ffffffffffffffe111612485576122ae8461281f565b60006123028260600151856000015185600001516124a7896101800151610d27565b612ca3565b6124b46137d6565b6124c18260c001516127b2565b90506124cb6137d6565b6124d88360c001516127b2565b90506124e3826127f4565b15806124f557506124f381612812565b155b15612503576120ae8361281f565b8151612710108061251357508151155b15612521576120ae8361281f565b82610140015151836101600151141561259c576125548160600151836000015161254f866101800151610d27565b612d75565b15612593576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b6120ae8361281f565b610160830151825161014085015160006125b7828585612dc9565b9050806125c3866111f0565b14612602576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b5060209201820120606094850180516040805180860192909252818101939093528251808203840181529601909152845194909101939093209092525050565b600080805b602081101561267a57600882901b9150848185018151811061266557fe5b016020015160f81c9190911790600101612647565b509392505050565b600081602001835110156126d2576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b600080602083016117788585612682565b6126f46137d6565b6040805160c081018252848152815160608101835260008082526020808301829052845182815280820186529394908501939083019161274a565b6127376137d6565b81526020019060019003908161272f5790505b5090528152602001600060405190808252806020026020018201604052801561278d57816020015b61277a6137d6565b8152602001906001900390816127725790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6127ba6137d6565b6127c26137d6565b82602001516001846000015103815181106127d957fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff1615801561116457505051600160401b1190565b6080015160ff16600c1490565b6121088161155c565b600061204f612840856020865b048560000151612de2565b6020855b06612f50565b80826020015183600001518151811061285f57fe5b60209081029190910101525080516001019052565b6040805160088082528183019092526000916060919060208201818036833701905050905060006128ae866020875b048660000151612de2565b90506020808606600801106129815760006128d5876020885b046001018760400151612de2565b905060005b6018601f881660080301811015612929576128fb838260208a5b0601612f50565b60f81b84828151811061290a57fe5b60200101906001600160f81b031916908160001a9053506001016128da565b506018601f8716600803015b600881101561297a5761294c826020898401612844565b60f81b84828151811061295b57fe5b60200101906001600160f81b031916908160001a905350600101612935565b50506129ca565b60005b60088110156129c85761299a82826020896128f4565b60f81b8382815181106129a957fe5b60200101906001600160f81b031916908160001a905350600101612984565b505b611fca82612f5d565b604080516020808252818301909252600091606091906020820181803683370190505090506000612a06866020876128a3565b9050602080860660200110612abf576000612a23876020886128c7565b905060005b601f8716602003811015612a7157612a43838260208a6128f4565b60f81b848281518110612a5257fe5b60200101906001600160f81b031916908160001a905350600101612a28565b50601f86166008035b602081101561297a57612a91826020898401612844565b60f81b848281518110612aa057fe5b60200101906001600160f81b031916908160001a905350600101612a7a565b60005b60208110156129c857612ad882826020896128f4565b60f81b838281518110612ae757fe5b60200101906001600160f81b031916908160001a905350600101612ac2565b6080015160ff161590565b600080612b2086602087612835565b90506000612b32826020880687612f9a565b90506000612b4e88602089048488600001518960200151612fd9565b98975050505050505050565b60006060612b678461307f565b90506000612b77876020886128a3565b905060208087066008011115612c595760005b6018601f881660080301811015612bd257612bc882602089840106858460180181518110612bb457fe5b01602001516001600160f81b0319166130e9565b9150600101612b8a565b50612bec876020885b048387600001518860200151612fd9565b96506000612bfc886020896128c7565b90506018601f8816600803015b6008811015612c3557612c2b8260208a840106868460180181518110612bb457fe5b9150600101612c09565b50612c5188602089046001018388604001518960600151612fd9565b975050612c98565b60005b6008811015612c8857612c7e828260208a0601858460180181518110612bb457fe5b9150600101612c5c565b50612c9587602088612bdb565b96505b509495945050505050565b60006060612cb08461307f565b90506000612cc0876020886128a3565b905060208087066020011115612d525760005b601f8716602003811015612d0257612cf8828260208a5b0601858481518110612bb457fe5b9150600101612cd3565b50612d0f87602088612bdb565b96506000612d1f886020896128c7565b9050601f87166020035b6020811015612c3557612d488260208a840106868481518110612bb457fe5b9150600101612d29565b60005b6020811015612c8857612d6b828260208a612cea565b9150600101612d55565b600080612d8485602086612835565b9050601f84165b6020811015612db657612d9e8282612f50565b15612dae576000925050506111e9565b600101612d8b565b506111e585602086048560000151613105565b600061204f607b612ddd868686600161328b565b613331565b6000815160001415612e4b57612df86000611cf8565b8414612e43576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b5060006111e9565b6000612e6a83600081518110612e5d57fe5b6020026020010151611cf8565b905060015b8351811015612ed4578460011660011415612ea857612ea1848281518110612e9357fe5b602002602001015183613331565b9150612ec8565b612ec582858381518110612eb857fe5b6020026020010151613331565b91505b600194851c9401612e6f565b50848114612f21576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8315612f315750600090506111e9565b82600081518110612f3e57fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015612f9357600882901b9150838181518110612f7e57fe5b016020015160f81c9190911790600101612f62565b5092915050565b60006060612fa78561307f565b90508260f81b818581518110612fb957fe5b60200101906001600160f81b031916908160001a9053506111e581612f5d565b60008151600314613031576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b611fca868686868660008151811061304557fe5b602002602001015160001c8760018151811061305d57fe5b60200260200101518860028151811061307257fe5b602002602001015161335d565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b602081101561267a578260f81b8282601f03815181106130c357fe5b60200101906001600160f81b031916908160001a90535060089290921c916001016130a7565b600060606130f68561307f565b905082818581518110612fb957fe5b600081516000141561316e5761311b6000611cf8565b8414613166576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b5060016111e9565b600061318083600081518110612e5d57fe5b90506001606061318e6135ec565b905060015b85518110156132225786600116600114156131cc576131c58682815181106131b757fe5b602002602001015185613331565b9350613216565b6131dc84878381518110612eb857fe5b935082801561321357508160018203815181106131f557fe5b602002602001015186828151811061320957fe5b6020026020010151145b92505b600196871c9601613193565b5086831461326f576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b851561328157600193505050506111e9565b5095945050505050565b6000602083116132c057845184106132ae576132a76000611cf8565b905061204f565b6132a76132bb868661368d565b611cf8565b60006132d48660028604878101908661328b565b90506132e06000611cf8565b811480156132eb5750825b1561330857613300868660028704600161328b565b91505061204f565b600061331a878760028804600061328b565b90506133268183613331565b979650505050505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60008061336987611cf8565b9050613376898988612de2565b5060606133816135ec565b905060018751036001901b891061344557876133a1578992505050613326565b60006133ac8a6136e4565b88519091505b600182038110156133da576133d08c846001840381518110612eb857fe5b9b506001016133b2565b5060015b60018203811015613430578a6001166001141561340e576134078360018303815181106131b757fe5b9350613424565b61342184846001840381518110612eb857fe5b93505b60019a8b1c9a016133de565b5061343b8b84613331565b9350505050613326565b60015b87518110156134c55760008a6001166001146134645783613479565b88828151811061347057fe5b60200260200101515b905060008b6001166001146134a15789838151811061349457fe5b60200260200101516134a3565b845b90506134af8282613331565b60019c8d1c9c9095509290920191506134489050565b5087156134d457509050613326565b8086815181106134e057fe5b6020026020010151841415806134f4575085155b613545576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b6000861561355c576135578686613331565b61355e565b855b9050861561356e57600019909601955b80875b60018a51038110156135975761358d82858381518110612eb857fe5b9150600101613571565b508381146135dd576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b509a9950505050505050505050565b6040805181815261082081018252606091829190602082016108008036833701905050905061361b6000611cf8565b8160008151811061362857fe5b602090810291909101015260015b60408110156136875761366882600183038151811061365157fe5b6020026020010151836001840381518110612eb857fe5b82828151811061367457fe5b6020908102919091010152600101613636565b50905090565b600080805b602081101561267a57600882901b915060008185018651116136b55760006136d3565b85828601815181106136c357fe5b01602001516001600160f81b0319165b60f81c929092179150600101613692565b6000816136f357506001610e1a565b613700600183901c6136e4565b6001019050610e1a565b6040518060a001604052806005906020820280368337509192915050565b604051806101c0016040528061373c613813565b8152602001613749613813565b81526000602082018190526040820181905260608201819052608082015260a001613772613880565b815260200161377f613880565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060c00160405280600081526020016137f061389a565b815260606020820181905260006040830181905290820181905260809091015290565b604080516101208101909152600081526020810161382f6137d6565b815260200161383c6137d6565b81526020016138496137d6565b81526020016138566137d6565b815260006020820181905260408201526060016138716137d6565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a264697066735822122088605c6297294927b78a1bf447c2e33c976eefe85d44a230ae00fb665c9e133064736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, _machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", _machineFields, proof, bproof)

	outstruct := new(struct {
		Gas    uint64
		Fields [5][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.Fields = out[1].([5][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
