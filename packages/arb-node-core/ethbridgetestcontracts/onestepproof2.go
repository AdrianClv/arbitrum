// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"_machineFields\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[5]\",\"name\":\"fields\",\"type\":\"bytes32[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"3a06aeec": "executeStep(bytes32[3],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b506138ed806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a06aeec1461003b578063793deea314610149575b600080fd5b610100600480360360a081101561005157600080fd5b81018160808101606082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b9193909290916020810190356401000000008111156100c157600080fd5b8201836020820111156100d357600080fd5b803590602001918460018302840111640100000000831117156100f557600080fd5b509092509050610312565b60405167ffffffffffffffff83168152602081018260a080838360005b8381101561013557818101518382015260200161011d565b505050509050019250505060405180910390f35b6101ef6004803603602081101561015f57600080fd5b81019060208101813564010000000081111561017a57600080fd5b82018360208201111561018c57600080fd5b803590602001918460018302840111640100000000831117156101ae57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103c4945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561023b578181015183820152602001610223565b50505050905001858103845288818151815260200191508051906020019060200280838360005b8381101561027a578181015183820152602001610262565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156102b95781810151838201526020016102a1565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156102f85781810151838201526020016102e0565b505050509050019850505050505050505060405180910390f35b600061031c6136dd565b6103246136fb565b604080516020601f890181900481028201810183528882526103a1928b3592828d013592918d0135918c908c908190840183828082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b908190840183828082843760009201919091525061040092505050565b90506103ac816108d0565b6103b581610c2f565b92509250509550959350505050565b6060806060806103d2613780565b6103db86610c92565b80516020820151604083015160609093015191975095509093509150505b9193509193565b6104086136fb565b60008360008151811061041757fe5b602001015160f81c60f81b60f81c905060008460018151811061043657fe5b016020015160f81c9050600260606004840160ff1667ffffffffffffffff8111801561046157600080fd5b5060405190808252806020026020018201604052801561049b57816020015b6104886137a8565b8152602001906001900390816104805790505b50905060608360040160ff1667ffffffffffffffff811180156104bd57600080fd5b506040519080825280602002602001820160405280156104f757816020015b6104e46137a8565b8152602001906001900390816104dc5790505b50905060005b8560ff16811015610533576105128985610d8a565b84838151811061051e57fe5b602090810291909101015293506001016104fd565b5060005b8460ff1681101561056d5761054c8985610d8a565b83838151811061055857fe5b60209081029190910101529350600101610537565b506105766137e5565b6105808985610f4c565b909450905061058d6136fb565b604051806101a001604052808381526020016105a884610ffd565b81526020018e81526020018d81526020018c8152602001600067ffffffffffffffff16815260200160405180604001604052808a60ff16815260200187815250815260200160405180604001604052808960ff1681526020018681525081526020018b878151811061061657fe5b602001015160f81c60f81b60f81c60ff16600114151581526020018b876001018151811061064057fe5b0160209081015160f81c825281018c90526002870160408201526060018a90528a519091506000908b908790811061067457fe5b602001015160f81c60f81b60f81c905060008b876001018151811061069557fe5b01602001516002979097019660f81c905060ff821615806106b957508160ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b815250906107665760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561072b578181015183820152602001610713565b50505050905090810190601f1680156107585780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5061076f6137a8565b60ff831661078c57835151610785908390611071565b905061082c565b6000875111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906107fc5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b50610829828560000151600001518960018e0360ff168151811061081c57fe5b60200260200101516110d5565b90505b6108358161115b565b84515260005b838b0360ff1681101561087a5761087288828151811061085757fe5b602002602001015186600001516112c890919063ffffffff16565b60010161083b565b5060005b8960ff168110156108bb576108b387828151811061089857fe5b602002602001015186600001516112e290919063ffffffff16565b60010161087e565b50929f9e505050505050505050505050505050565b60008060006138506108e985610120015160ff166112fc565b93509350935093506108fb858361140c565b156109095750505050610c2c565b60c0850151518411156109bd57610926610921611478565b61115b565b61093786602001516020015161115b565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b815250906109aa5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b506109b4856114bf565b50505050610c2c565b60e085015151831115610a57576109d5610921611478565b6109e686602001516040015161115b565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b815250906109aa5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b6000841180610a695750846101000151155b8015610a79575060c08501515184145b80610aa057508461010001518015610a8f575083155b8015610aa0575060c0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b81525090610b0f5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b5060e0850151516040805180820190915260088152674155585f4d414e5960c01b6020820152908414610b835760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561072b578181015183820152602001610713565b50610b91858263ffffffff16565b60005b60c086015151811015610bdb57610bd38660c00151602001518281518110610bb857fe5b602002602001015187602001516112c890919063ffffffff16565b600101610b94565b5060005b60e086015151811015610c2657610c1e8660e00151602001518281518110610c0357fe5b602002602001015187602001516112e290919063ffffffff16565b600101610bdf565b50505050505b50565b6000610c396136dd565b8260a001516040518060a00160405280610c568660000151611528565b8152602001610c688660200151611528565b81526020018560400151815260200185606001518152602001856080015181525091509150915091565b610c9a613780565b6060610cd98384600081518110610cad57fe5b602001015160f81c60f81b85600181518110610cc557fe5b01602001516001600160f81b031916611602565b90506060610d068485600181518110610cee57fe5b602001015160f81c60f81b86600281518110610cc557fe5b90506060610d338586600281518110610d1b57fe5b602001015160f81c60f81b87600381518110610cc557fe5b90506060610d608687600381518110610d4857fe5b602001015160f81c60f81b88600481518110610cc557fe5b6040805160808101825295865260208601949094529284019190915250606082015290505b919050565b6000610d946137a8565b83518310610dda576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b600080610de786866116a0565b91509150610df36116c7565b60ff168160ff161415610e27576000610e0c87846116cc565b909350905082610e1b8261173a565b94509450505050610f45565b610e2f6117fa565b60ff168160ff161415610e5157610e4686836117ff565b935093505050610f45565b610e596118a1565b60ff168160ff161415610e81576000610e7287846116cc565b909350905082610e1b826118a6565b610e89611993565b60ff168160ff161415610ea057610e468683611998565b610ea8611a2d565b60ff168160ff1610158015610ec95750610ec0611a32565b60ff168160ff16105b15610f05576000610ed8611a2d565b820390506060610ee9828986611a37565b909450905083610ef882611ae0565b9550955050505050610f45565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000610f566137e5565b610f5e6137e5565b6000610100820181905280610f7387876116cc565b9096509150610f828787611998565b60208501529550610f938787611998565b60408501529550610fa48787610d8a565b60608501529550610fb58787610d8a565b60808501529550610fc687876116cc565b60a08501529550610fd787876116cc565b9096509050610fe68787610d8a565b60e085015291835260c08301529590945092505050565b6110056137e5565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b6110796137a8565b6040805160608101825260ff8516815260208082018590528251600080825291810184526110cc938301916110c4565b6110b16137a8565b8152602001906001900390816110a95790505b509052611c22565b90505b92915050565b6110dd6137a8565b604080516001808252818301909252606091816020015b6110fc6137a8565b8152602001906001900390816110f4579050509050828160008151811061111f57fe5b602002602001018190525061115060405180606001604052808760ff16815260200186815260200183815250611c22565b9150505b9392505050565b60006111656116c7565b60ff16826080015160ff16141561118857815161118190611cb3565b9050610d85565b6111906117fa565b60ff16826080015160ff1614156111ae576111818260200151611cd7565b6111b6611993565b60ff16826080015160ff1614156111d857815160a08301516111819190611dcc565b6111e0611a2d565b60ff16826080015160ff161415611219576111f96137a8565b6112068360400151611e1a565b90506112118161115b565b915050610d85565b611221611f90565b60ff16826080015160ff16141561123a57508051610d85565b6112426118a1565b60ff16826080015160ff161415611287575060608082015160408051607b60208083019190915281830193909352815180820383018152930190528151910120610d85565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b6112d6826020015182611f95565b82602001819052505050565b6112f0826040015182611f95565b82604001819052505050565b6000808061385060a185141561132157506002925060009150600a90506120136103f9565b60a285141561133f57506002925060009150600a90506120c66103f9565b60a385141561135d57506002925060009150600a90506121586103f9565b60a485141561137b57506003925060009150606490506121ea6103f9565b60a585141561139957506003925060009150606490506122d76103f9565b60a68514156113b757506003925060009150606490506123a86103f9565b60708514156113d557506002925060009150606490506124676103f9565b60405162461bcd60e51b815260040180806020018281038252602c81526020018061388c602c913960400191505060405180910390fd5b60a0808301805167ffffffffffffffff90840181169091526020840151909101516000918316111561145757602083015160001960a09091015261144f836114bf565b5060016110cf565b50602082015160a001805167ffffffffffffffff83169003905260006110cf565b6114806137a8565b604080516000808252602082019092526114ba916114b4565b6114a16137a8565b8152602001906001900390816114995790505b50611ae0565b905090565b60408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051908201209082015160c00151141561151b5761151681602001516125f2565b610c2c565b6020015160c08101519052565b60006002826101000151141561154057506000610d85565b6001826101000151141561155657506001610d85565b815160208301516115669061115b565b611573846040015161115b565b611580856060015161115b565b61158d866080015161115b565b8660a001518760c001516115a48960e0015161115b565b6040516020018089815260200188815260200187815260200186815260200185815260200184815260200183815260200182815260200198505050505050505050604051602081830303815290604052805190602001209050610d85565b606060f883811c9083901c81900360ff1690828267ffffffffffffffff8111801561162c57600080fd5b50604051908082528060200260200182016040528015611656578160200160208202803683370190505b50905060005b8381101561169557611673888285016020026125fd565b60001b82828151811061168257fe5b602090810291909101015260010161165c565b509695505050505050565b600080826001018484815181106116b357fe5b016020015190925060f81c90509250929050565b600090565b600080828451101580156116e4575060208385510310155b611721576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b6020830161172f858561263d565b915091509250929050565b6117426137a8565b6040805160c0810182528381528151606081018352600080825260208083018290528451828152808201865293949085019390830191611798565b6117856137a8565b81526020019060019003908161177d5790505b509052815260200160006040519080825280602002602001820160405280156117db57816020015b6117c86137a8565b8152602001906001900390816117c05790505b5081526000602082018190526040820152600160609091015292915050565b600190565b60006118096137a8565b826000806118156137a8565b600061182189866116a0565b909550935061183089866116a0565b9095509250600160ff851614156118515761184b8986610d8a565b90955091505b61185b8986612696565b9095509050600160ff8516141561188657846118788483856110d5565b965096505050505050610f45565b846118918483611071565b9650965050505050509250929050565b600c90565b6118ae6137a8565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff811180156118f657600080fd5b5060405190808252806020026020018201604052801561193057816020015b61191d6137a8565b8152602001906001900390816119155790505b5090528152602001600060405190808252806020026020018201604052801561197357816020015b6119606137a8565b8152602001906001900390816119585790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006119a26137a8565b828451101580156119b7575060408385510310155b6119f4576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b600080611a018686612696565b9094509150611a1086856116cc565b909450905083611a2083836126a7565b9350935050509250929050565b600390565b600d90565b60006060828160ff871667ffffffffffffffff81118015611a5757600080fd5b50604051908082528060200260200182016040528015611a9157816020015b611a7e6137a8565b815260200190600190039081611a765790505b50905060005b8760ff168160ff161015611ad357611aaf8784610d8a565b838360ff1681518110611abe57fe5b60209081029190910101529250600101611a97565b5090969095509350505050565b611ae86137a8565b611af28251612766565b611b43576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b8351811015611b7a57838181518110611b5d57fe5b602002602001015160a00151820191508080600101915050611b48565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b8152602001600067ffffffffffffffff81118015611bc357600080fd5b50604051908082528060200260200182016040528015611bfd57816020015b611bea6137a8565b815260200190600190039081611be25790505b5090528152602081019490945260006040850152600360608501526080909301525090565b611c2a6137a8565b6040518060c0016040528060008152602001838152602001600067ffffffffffffffff81118015611c5a57600080fd5b50604051908082528060200260200182016040528015611c9457816020015b611c816137a8565b815260200190600190039081611c795790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b6000600282604001515110611ce857fe5b604082015151611d4b57611cfa6117fa565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b81526001018281526020019350505050604051602081830303815290604052805190602001209050610d85565b611d536117fa565b8260000151611d798460400151600081518110611d6c57fe5b602002602001015161115b565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000611dd6611a2d565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b611e226137a8565b600882511115611e70576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b6060825167ffffffffffffffff81118015611e8a57600080fd5b50604051908082528060200260200182016040528015611eb4578160200160208202803683370190505b508051909150600160005b82811015611f1757611ed6868281518110611d6c57fe5b848281518110611ee257fe5b602002602001018181525050858181518110611efa57fe5b602002602001015160a00151820191508080600101915050611ebf565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015611f59578181015183820152602001611f41565b5050505090500192505050604051602081830303815290604052805190602001209050611f8681836126a7565b9695505050505050565b606490565b611f9d6137a8565b6040805160028082526060828101909352816020015b611fbb6137a8565b815260200190600190039081611fb35790505090508281600081518110611fde57fe5b60200260200101819052508381600181518110611ff757fe5b602002602001018190525061200b81611e1a565b949350505050565b61201b6137a8565b6120288260c0015161276d565b90506120326137a8565b61203f8360c0015161276d565b905061204a826127af565b158061205c575061205a816127cd565b155b156120715761206a836127da565b5050610c2c565b8151600160401b116120865761206a836127da565b60006120a8826060015184600001516120a3876101800151610c92565b6127f7565b90506120c08460c001516120bb8361173a565b612819565b50505050565b6120ce6137a8565b6120db8260c0015161276d565b90506120e56137a8565b6120f28360c0015161276d565b90506120fd826127af565b158061210f575061210d816127cd565b155b1561211d5761206a836127da565b815167fffffffffffffff9116121365761206a836127da565b60006120a882606001518460000151612153876101800151610c92565b612843565b6121606137a8565b61216d8260c0015161276d565b90506121776137a8565b6121848360c0015161276d565b905061218f826127af565b15806121a1575061219f816127cd565b155b156121af5761206a836127da565b815167ffffffffffffffe1116121c85761206a836127da565b60006120a8826060015184600001516121e5876101800151610c92565b6129a2565b6121f26137a8565b6121ff8260c0015161276d565b90506122096137a8565b6122168360c0015161276d565b90506122206137a8565b61222d8460c0015161276d565b9050612238836127af565b158061224a575061224882612ad5565b155b8061225b5750612259816127cd565b155b1561227157612269846127da565b505050610c2c565b8251600160401b1115806122885750815161010011155b1561229657612269846127da565b60006122bd8260600151856000015185600001516122b8896101800151610c92565b612ae0565b90506122d08560c001516120bb836118a6565b5050505050565b6122df6137a8565b6122ec8260c0015161276d565b90506122f66137a8565b6123038360c0015161276d565b905061230d6137a8565b61231a8460c0015161276d565b9050612325836127af565b1580612337575061233582612ad5565b155b806123485750612346816127cd565b155b1561235657612269846127da565b825167fffffffffffffff911158061237357508151600160401b11155b1561238157612269846127da565b60006122bd8260600151856000015185600001516123a3896101800151610c92565b612b29565b6123b06137a8565b6123bd8260c0015161276d565b90506123c76137a8565b6123d48360c0015161276d565b90506123de6137a8565b6123eb8460c0015161276d565b90506123f6836127af565b1580612408575061240682612ad5565b155b806124195750612417816127cd565b155b1561242757612269846127da565b825167ffffffffffffffe11161244057612269846127da565b60006122bd826060015185600001518560000151612462896101800151610c92565b612c71565b61246f6137a8565b61247c8260c0015161276d565b90506124866137a8565b6124938360c0015161276d565b905061249e826127af565b15806124b057506124ae816127cd565b155b156124be5761206a836127da565b815161271010156124d25761206a836127da565b8261014001515183610160015110156125855761016083015182516101408501516000612500828585612d42565b90508061250c8661115b565b1461254b576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b5060209201820120606085810180516040805180870192909252818101949094528351808203850181529201909252805192019190912090525b6125a5816060015183600001516125a0866101800151610c92565b612d60565b156125e4576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b6125ed836127da565b505050565b600161010090910152565b600080805b602081101561263557600882901b9150848185018151811061262057fe5b016020015160f81c9190911790600101612602565b509392505050565b6000816020018351101561268d576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b6000806020830161172f858561263d565b6126af6137a8565b6040805160c0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191612705565b6126f26137a8565b8152602001906001900390816126ea5790505b5090528152602001600060405190808252806020026020018201604052801561274857816020015b6127356137a8565b81526020019060019003908161272d5790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6127756137a8565b61277d6137a8565b826020015160018460000151038151811061279457fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff161580156110cf57505051600160401b1190565b6080015160ff16600c1490565b6127e3816114bf565b60c081015160009081905260e09091015152565b600061200b61280f856020865b048560000151612db4565b6020855b06612f22565b80826020015183600001518151811061282e57fe5b60209081029190910101525080516001019052565b60408051600880825281830190925260009160609190602082018180368337019050509050600061287d866020875b048660000151612db4565b90506020808606600801106129505760006128a4876020885b046001018760400151612db4565b905060005b6018601f8816600803018110156128f8576128ca838260208a5b0601612f22565b60f81b8482815181106128d957fe5b60200101906001600160f81b031916908160001a9053506001016128a9565b506018601f8716600803015b60088110156129495761291b826020898401612813565b60f81b84828151811061292a57fe5b60200101906001600160f81b031916908160001a905350600101612904565b5050612999565b60005b60088110156129975761296982826020896128c3565b60f81b83828151811061297857fe5b60200101906001600160f81b031916908160001a905350600101612953565b505b611f8682612f2f565b6040805160208082528183019092526000916060919060208201818036833701905050905060006129d586602087612872565b9050602080860660200110612a8e5760006129f287602088612896565b905060005b601f8716602003811015612a4057612a12838260208a6128c3565b60f81b848281518110612a2157fe5b60200101906001600160f81b031916908160001a9053506001016129f7565b50601f86166008035b602081101561294957612a60826020898401612813565b60f81b848281518110612a6f57fe5b60200101906001600160f81b031916908160001a905350600101612a49565b60005b602081101561299757612aa782826020896128c3565b60f81b838281518110612ab657fe5b60200101906001600160f81b031916908160001a905350600101612a91565b6080015160ff161590565b600080612aef86602087612804565b90506000612b01826020880687612f6c565b90506000612b1d88602089048488600001518960200151612fab565b98975050505050505050565b60006060612b3684613051565b90506000612b4687602088612872565b9050602080870660080110612c275760005b6018601f881660080301811015612ba057612b9682602089840106858460180181518110612b8257fe5b01602001516001600160f81b0319166130bb565b9150600101612b58565b50612bba876020885b048387600001518860200151612fab565b96506000612bca88602089612896565b90506018601f8816600803015b6008811015612c0357612bf98260208a840106868460180181518110612b8257fe5b9150600101612bd7565b50612c1f88602089046001018388604001518960600151612fab565b975050612c66565b60005b6008811015612c5657612c4c828260208a0601858460180181518110612b8257fe5b9150600101612c2a565b50612c6387602088612ba9565b96505b509495945050505050565b60006060612c7e84613051565b90506000612c8e87602088612872565b9050602080870660200110612d1f5760005b601f8716602003811015612ccf57612cc5828260208a5b0601858481518110612b8257fe5b9150600101612ca0565b50612cdc87602088612ba9565b96506000612cec88602089612896565b9050601f87166020035b6020811015612c0357612d158260208a840106868481518110612b8257fe5b9150600101612cf6565b60005b6020811015612c5657612d38828260208a612cb7565b9150600101612d22565b825160009061200b90612d5b607b8188888860016130d7565b61317e565b600080612d6f85602086612804565b9050601f84165b6020811015612da157612d898282612f22565b15612d9957600092505050611154565b600101612d76565b50611150856020860485600001516131aa565b6000815160001415612e1d57612dca6000611cb3565b8414612e15576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506000611154565b6000612e3c83600081518110612e2f57fe5b6020026020010151611cb3565b905060015b8351811015612ea6578460011660011415612e7a57612e73848281518110612e6557fe5b60200260200101518361317e565b9150612e9a565b612e9782858381518110612e8a57fe5b602002602001015161317e565b91505b600194851c9401612e41565b50848114612ef3576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b8315612f03575060009050611154565b82600081518110612f1057fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b8351811015612f6557600882901b9150838181518110612f5057fe5b016020015160f81c9190911790600101612f34565b5092915050565b60006060612f7985613051565b90508260f81b818581518110612f8b57fe5b60200101906001600160f81b031916908160001a90535061115081612f2f565b60008151600314613003576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b611f86868686868660008151811061301757fe5b602002602001015160001c8760018151811061302f57fe5b60200260200101518860028151811061304457fe5b6020026020010151613330565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b6020811015612635578260f81b8282601f038151811061309557fe5b60200101906001600160f81b031916908160001a90535060089290921c91600101613079565b600060606130c885613051565b905082818581518110612f8b57fe5b60006020831161310c57845184106130fa576130f36000611cb3565b905061200b565b6130f361310786866135bf565b611cb3565b6000613124866002860487016002875b0460006130d7565b90506131306000611cb3565b8114801561313b5750825b156131585761315086866002870460016130d7565b91505061200b565b6000613167878760028861311c565b9050613173818361317e565b979650505050505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000815160001415613213576131c06000611cb3565b841461320b576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b506001611154565b600061322583600081518110612e2f57fe5b905060016060613233613616565b905060015b85518110156132c75786600116600114156132715761326a86828151811061325c57fe5b60200260200101518561317e565b93506132bb565b61328184878381518110612e8a57fe5b93508280156132b8575081600182038151811061329a57fe5b60200260200101518682815181106132ae57fe5b6020026020010151145b92505b600196871c9601613238565b50868314613314576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b85156133265760019350505050611154565b5095945050505050565b60008061333c87611cb3565b9050613349898988612db4565b506060613354613616565b905060018751036001901b89106134185787613374578992505050613173565b600061337f8a6136b7565b88519091505b600182038110156133ad576133a38c846001840381518110612e8a57fe5b9b50600101613385565b5060015b60018203811015613403578a600116600114156133e1576133da83600183038151811061325c57fe5b93506133f7565b6133f484846001840381518110612e8a57fe5b93505b60019a8b1c9a016133b1565b5061340e8b8461317e565b9350505050613173565b60015b87518110156134985760008a600116600114613437578361344c565b88828151811061344357fe5b60200260200101515b905060008b6001166001146134745789838151811061346757fe5b6020026020010151613476565b845b9050613482828261317e565b60019c8d1c9c90955092909201915061341b9050565b5087156134a757509050613173565b8086815181106134b357fe5b6020026020010151841415806134c7575085155b613518576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b6000861561352f5761352a868661317e565b613531565b855b9050861561354157600019909601955b80875b60018a510381101561356a5761356082858381518110612e8a57fe5b9150600101613544565b508381146135b0576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b509a9950505050505050505050565b600080805b602081101561263557600882901b915060008185018651116135e7576000613605565b85828601815181106135f557fe5b01602001516001600160f81b0319165b60f81c9290921791506001016135c4565b604080518181526108208101825260609182919060208201610800803683370190505090506136456000611cb3565b8160008151811061365257fe5b602090810291909101015260015b60408110156136b15761369282600183038151811061367b57fe5b6020026020010151836001840381518110612e8a57fe5b82828151811061369e57fe5b6020908102919091010152600101613660565b50905090565b6000816136c657506001610d85565b6136d3600183901c6136b7565b6001019050610d85565b6040518060a001604052806005906020820280368337509192915050565b604051806101a0016040528061370f6137e5565b815260200161371c6137e5565b81526000602082018190526040820181905260608201819052608082015260a001613745613852565b8152602001613752613852565b8152602001600015158152602001600060ff1681526020016060815260200160008152602001606081525090565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060c00160405280600081526020016137c261386c565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610120810190915260008152602081016138016137a8565b815260200161380e6137a8565b815260200161381b6137a8565b81526020016138286137a8565b815260006020820181905260408201526060016138436137a8565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe75736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a26469706673582212203cdbc72ae60c8965061bdcf7e8ef9b6342848c5505e366e08f740ebcd8049edb64736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, _machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", _machineFields, proof, bproof)

	outstruct := new(struct {
		Gas    uint64
		Fields [5][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.Fields = out[1].([5][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
