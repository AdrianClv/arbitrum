// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ethbridgetestcontracts

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// OneStepProof2ABI is the input ABI used to generate the binding from.
const OneStepProof2ABI = "[{\"inputs\":[{\"internalType\":\"bytes32[3]\",\"name\":\"_machineFields\",\"type\":\"bytes32[3]\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"bproof\",\"type\":\"bytes\"}],\"name\":\"executeStep\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes32[5]\",\"name\":\"fields\",\"type\":\"bytes32[5]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"parseProof\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}]"

// OneStepProof2FuncSigs maps the 4-byte function signature to its string representation.
var OneStepProof2FuncSigs = map[string]string{
	"3a06aeec": "executeStep(bytes32[3],bytes,bytes)",
	"793deea3": "parseProof(bytes)",
}

// OneStepProof2Bin is the compiled bytecode used for deploying new contracts.
var OneStepProof2Bin = "0x608060405234801561001057600080fd5b50613a43806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633a06aeec1461003b578063793deea314610148575b600080fd5b610100600480360360a081101561005157600080fd5b81018160808101606082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b9193909290916020810190356401000000008111156100c157600080fd5b8201836020820111156100d357600080fd5b803590602001918460018302840111640100000000831117156100f557600080fd5b509092509050610311565b6040516001600160401b0383168152602081018260a080838360005b8381101561013457818101518382015260200161011c565b505050509050019250505060405180910390f35b6101ee6004803603602081101561015e57600080fd5b81019060208101813564010000000081111561017957600080fd5b82018360208201111561018b57600080fd5b803590602001918460018302840111640100000000831117156101ad57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506103c3945050505050565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b8381101561023a578181015183820152602001610222565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015610279578181015183820152602001610261565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156102b85781810151838201526020016102a0565b50505050905001858103825286818151815260200191508051906020019060200280838360005b838110156102f75781810151838201526020016102df565b505050509050019850505050505050505060405180910390f35b600061031b613812565b610323613830565b604080516020601f890181900481028201810183528882526103a0928b3592828d013592918d0135918c908c908190840183828082843760009201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284376000920191909152506103ff92505050565b90506103ab816108b9565b6103b481610cc4565b92509250509550959350505050565b6060806060806103d16138b6565b6103da86610d27565b80516020820151604083015160609093015191975095509093509150505b9193509193565b610407613830565b60008360008151811061041657fe5b602001015160f81c60f81b60f81c905060008460018151811061043557fe5b602001015160f81c60f81b60f81c905060008560028151811061045457fe5b016020015160f81c9050600360606004840160ff166001600160401b038111801561047e57600080fd5b506040519080825280602002602001820160405280156104b857816020015b6104a56138de565b81526020019060019003908161049d5790505b50905060608360040160ff166001600160401b03811180156104d957600080fd5b5060405190808252806020026020018201604052801561051357816020015b6105006138de565b8152602001906001900390816104f85790505b50905060005b8560ff1681101561054f5761052e8a85610e1f565b84838151811061053a57fe5b60209081029190910101529350600101610519565b5060005b8460ff16811015610589576105688a85610e1f565b83838151811061057457fe5b60209081029190910101529350600101610553565b5061059261391b565b61059c8a85610fe1565b90945090506105a9613830565b604051806101c001604052808381526020016105c484611092565b81526020018f81526020018e81526020018d815260200160006001600160401b0316815260200160405180604001604052808a60ff16815260200187815250815260200160405180604001604052808960ff1681526020018681525081526020018c878151811061063157fe5b602001015160f81c60f81b60f81c60ff16600114151581526020018960ff1681526020018c81526020018660010181526020018b815260200160001515815250905060008b868151811061068157fe5b01602001516001969096019560f81c90508015806106a257508060ff166001145b6040518060400160405280600b81526020016a04241445f494d4d5f5459560ac1b8152509061074f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156107145781810151838201526020016106fc565b50505050905090810190601f1680156107415780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506107586138de565b60ff82166107755782515161076e908b90611106565b9050610815565b6000865111604051806040016040528060068152602001654e4f5f494d4d60d01b815250906107e55760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b506108128a8460000151600001518860018d0360ff168151811061080557fe5b602002602001015161116a565b90505b61081e816111f0565b83515260005b828a0360ff168110156108635761085b87828151811061084057fe5b6020026020010151856000015161135d90919063ffffffff16565b600101610824565b5060005b8860ff168110156108a45761089c86828151811061088157fe5b6020026020010151856000015161137790919063ffffffff16565b600101610867565b50919f9e505050505050505050505050505050565b60008060006139866108d285610120015160ff16611391565b935093509350935060008411806108ec5750846101000151155b80156108fd575060c0850151518410155b8061092457508461010001518015610913575083155b8015610924575060c0850151516001145b6040518060400160405280600a815260200169535441434b5f4d414e5960b01b815250906109935760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b5060e0850151516040805180820190915260088152674155585f4d414e5960c01b602082015290841015610a085760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b5060c085015151841115610ac557610a26610a216114a1565b6111f0565b610a378660200151602001516111f0565b146040518060400160405280600d81526020016c535441434b5f4d495353494e4760981b81525090610aaa5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b50610ab68560056114e8565b50610ac08561155c565b610b84565b60e085015151831115610b5f57610add610a216114a1565b610aee8660200151604001516111f0565b146040518060400160405280600b81526020016a4155585f4d495353494e4760a81b81525090610aaa5760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156107145781810151838201526020016106fc565b610b6985836114e8565b15610b7757610ac08561155c565b610b84858263ffffffff16565b846101a0015115610c275760408051600160f81b6020808301919091526000602183018190526022808401919091528351808403909101815260429092019092528051908201209086015160c001511415610beb57610be68560200151611567565b610c27565b60006101a0860152602085015160c081015190526101008501518015610c0f575083155b610c1d5760c0850151600090525b60e0850151600090525b60005b60c086015151811015610c7157610c698660c00151602001518281518110610c4e57fe5b6020026020010151876020015161135d90919063ffffffff16565b600101610c2a565b5060005b60e086015151811015610cbc57610cb48660e00151602001518281518110610c9957fe5b6020026020010151876020015161137790919063ffffffff16565b600101610c75565b505050505050565b6000610cce613812565b8260a001516040518060a00160405280610ceb8660000151611572565b8152602001610cfd8660200151611572565b81526020018560400151815260200185606001518152602001856080015181525091509150915091565b610d2f6138b6565b6060610d6e8384600081518110610d4257fe5b602001015160f81c60f81b85600181518110610d5a57fe5b01602001516001600160f81b03191661164c565b90506060610d9b8485600181518110610d8357fe5b602001015160f81c60f81b86600281518110610d5a57fe5b90506060610dc88586600281518110610db057fe5b602001015160f81c60f81b87600381518110610d5a57fe5b90506060610df58687600381518110610ddd57fe5b602001015160f81c60f81b88600481518110610d5a57fe5b6040805160808101825295865260208601949094529284019190915250606082015290505b919050565b6000610e296138de565b83518310610e6f576040805162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a59081bd9999cd95d60921b604482015290519081900360640190fd5b600080610e7c86866116e9565b91509150610e88611710565b60ff168160ff161415610ebc576000610ea18784611715565b909350905082610eb082611783565b94509450505050610fda565b610ec4611843565b60ff168160ff161415610ee657610edb8683611848565b935093505050610fda565b610eee6118ea565b60ff168160ff161415610f16576000610f078784611715565b909350905082610eb0826118ef565b610f1e6119db565b60ff168160ff161415610f3557610edb86836119e0565b610f3d611a75565b60ff168160ff1610158015610f5e5750610f55611a7a565b60ff168160ff16105b15610f9a576000610f6d611a75565b820390506060610f7e828986611a7f565b909450905083610f8d82611b27565b9550955050505050610fda565b6040805162461bcd60e51b815260206004820152601060248201526f696e76616c69642074797065636f646560801b604482015290519081900360640190fd5b9250929050565b6000610feb61391b565b610ff361391b565b60006101008201819052806110088787611715565b909650915061101787876119e0565b6020850152955061102887876119e0565b604085015295506110398787610e1f565b6060850152955061104a8787610e1f565b6080850152955061105b8787611715565b60a0850152955061106c8787611715565b909650905061107b8787610e1f565b60e085015291835260c08301529590945092505050565b61109a61391b565b60405180610120016040528083600001518152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e0015181526020018361010001518152509050919050565b61110e6138de565b6040805160608101825260ff85168152602080820185905282516000808252918101845261116193830191611159565b6111466138de565b81526020019060019003908161113e5790505b509052611c68565b90505b92915050565b6111726138de565b604080516001808252818301909252606091816020015b6111916138de565b81526020019060019003908161118957905050905082816000815181106111b457fe5b60200260200101819052506111e560405180606001604052808760ff16815260200186815260200183815250611c68565b9150505b9392505050565b60006111fa611710565b60ff16826080015160ff16141561121d57815161121690611cf8565b9050610e1a565b611225611843565b60ff16826080015160ff161415611243576112168260200151611d1c565b61124b6119db565b60ff16826080015160ff16141561126d57815160a08301516112169190611e11565b611275611a75565b60ff16826080015160ff1614156112ae5761128e6138de565b61129b8360400151611e5f565b90506112a6816111f0565b915050610e1a565b6112b6611fd4565b60ff16826080015160ff1614156112cf57508051610e1a565b6112d76118ea565b60ff16826080015160ff16141561131c575060608082015160408051607b60208083019190915281830193909352815180820383018152930190528151910120610e1a565b6040805162461bcd60e51b8152602060048201526011602482015270496e76616c6964207479706520636f646560781b604482015290519081900360640190fd5b61136b826020015182611fd9565b82602001819052505050565b611385826040015182611fd9565b82604001819052505050565b6000808061398660a18514156113b657506002925060009150600a90506120576103f8565b60a28514156113d457506002925060009150600a905061213d6103f8565b60a38514156113f257506002925060009150600a90506122036103f8565b60a485141561141057506003925060009150606490506122c96103f8565b60a585141561142e57506003925060009150606490506123d86103f8565b60a685141561144c57506003925060009150606490506124cb6103f8565b607085141561146a57506002925060009150606490506125be6103f8565b60405162461bcd60e51b815260040180806020018281038252602c8152602001806139e2602c913960400191505060405180910390fd5b6114a96138de565b604080516000808252602082019092526114e3916114dd565b6114ca6138de565b8152602001906001900390816114c25790505b50611b27565b905090565b6000816001600160401b0316836020015160a00151101561152b575060a082810180516005016001600160401b0316905260208301516000199101526001611164565b5060a080830180516001600160401b0390840181169091526020840151909101805191831690910390526000611164565b60016101a090910152565b600161010090910152565b60006002826101000151141561158a57506000610e1a565b600182610100015114156115a057506001610e1a565b815160208301516115b0906111f0565b6115bd84604001516111f0565b6115ca85606001516111f0565b6115d786608001516111f0565b8660a001518760c001516115ee8960e001516111f0565b6040516020018089815260200188815260200187815260200186815260200185815260200184815260200183815260200182815260200198505050505050505050604051602081830303815290604052805190602001209050610e1a565b606060f883811c9083901c81900360ff169082826001600160401b038111801561167557600080fd5b5060405190808252806020026020018201604052801561169f578160200160208202803683370190505b50905060005b838110156116de576116bc8882850160200261274a565b60001b8282815181106116cb57fe5b60209081029190910101526001016116a5565b509695505050505050565b600080826001018484815181106116fc57fe5b016020015190925060f81c90509250929050565b600090565b6000808284511015801561172d575060208385510310155b61176a576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b60208301611778858561278a565b915091509250929050565b61178b6138de565b6040805160c08101825283815281516060810183526000808252602080830182905284518281528082018652939490850193908301916117e1565b6117ce6138de565b8152602001906001900390816117c65790505b5090528152602001600060405190808252806020026020018201604052801561182457816020015b6118116138de565b8152602001906001900390816118095790505b5081526000602082018190526040820152600160609091015292915050565b600190565b60006118526138de565b8260008061185e6138de565b600061186a89866116e9565b909550935061187989866116e9565b9095509250600160ff8516141561189a576118948986610e1f565b90955091505b6118a489866127e3565b9095509050600160ff851614156118cf57846118c184838561116a565b965096505050505050610fda565b846118da8483611106565b9650965050505050509250929050565b600c90565b6118f76138de565b6040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b038111801561193e57600080fd5b5060405190808252806020026020018201604052801561197857816020015b6119656138de565b81526020019060019003908161195d5790505b509052815260200160006040519080825280602002602001820160405280156119bb57816020015b6119a86138de565b8152602001906001900390816119a05790505b50815260208101849052600c604082015260016060909101529050919050565b600290565b60006119ea6138de565b828451101580156119ff575060408385510310155b611a3c576040805162461bcd60e51b81526020600482015260096024820152681d1bdbc81cda1bdc9d60ba1b604482015290519081900360640190fd5b600080611a4986866127e3565b9094509150611a588685611715565b909450905083611a6883836127f4565b9350935050509250929050565b600390565b600d90565b60006060828160ff87166001600160401b0381118015611a9e57600080fd5b50604051908082528060200260200182016040528015611ad857816020015b611ac56138de565b815260200190600190039081611abd5790505b50905060005b8760ff168160ff161015611b1a57611af68784610e1f565b838360ff1681518110611b0557fe5b60209081029190910101529250600101611ade565b5090969095509350505050565b611b2f6138de565b611b3982516128b3565b611b8a576040805162461bcd60e51b815260206004820152601a60248201527f5475706c65206d75737420686176652076616c69642073697a65000000000000604482015290519081900360640190fd5b600160005b8351811015611bc157838181518110611ba457fe5b602002602001015160a00151820191508080600101915050611b8f565b506040518060c00160405280600081526020016040518060600160405280600060ff1681526020016000801b815260200160006001600160401b0381118015611c0957600080fd5b50604051908082528060200260200182016040528015611c4357816020015b611c306138de565b815260200190600190039081611c285790505b5090528152602081019490945260006040850152600360608501526080909301525090565b611c706138de565b6040518060c001604052806000815260200183815260200160006001600160401b0381118015611c9f57600080fd5b50604051908082528060200260200182016040528015611cd957816020015b611cc66138de565b815260200190600190039081611cbe5790505b5081526000602082015260016040820181905260609091015292915050565b60408051602080820193909352815180820384018152908201909152805191012090565b6000600282604001515110611d2d57fe5b604082015151611d9057611d3f611843565b82600001518360200151604051602001808460ff1660f81b81526001018360ff1660f81b81526001018281526020019350505050604051602081830303815290604052805190602001209050610e1a565b611d98611843565b8260000151611dbe8460400151600081518110611db157fe5b60200260200101516111f0565b8460200151604051602001808560ff1660f81b81526001018460ff1660f81b8152600101838152602001828152602001945050505050604051602081830303815290604052805190602001209050919050565b6000611e1b611a75565b8383604051602001808460ff1660f81b8152600101838152602001828152602001935050505060405160208183030381529060405280519060200120905092915050565b611e676138de565b600882511115611eb5576040805162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8eae0d8ca40d8cadccee8d60631b604482015290519081900360640190fd5b606082516001600160401b0381118015611ece57600080fd5b50604051908082528060200260200182016040528015611ef8578160200160208202803683370190505b508051909150600160005b82811015611f5b57611f1a868281518110611db157fe5b848281518110611f2657fe5b602002602001018181525050858181518110611f3e57fe5b602002602001015160a00151820191508080600101915050611f03565b506000835184604051602001808360ff1660f81b8152600101828051906020019060200280838360005b83811015611f9d578181015183820152602001611f85565b5050505090500192505050604051602081830303815290604052805190602001209050611fca81836127f4565b9695505050505050565b606490565b611fe16138de565b6040805160028082526060828101909352816020015b611fff6138de565b815260200190600190039081611ff7579050509050828160008151811061202257fe5b6020026020010181905250838160018151811061203b57fe5b602002602001018190525061204f81611e5f565b949350505050565b61205f6138de565b61206c8260c001516128ba565b90506120766138de565b6120838360c001516128ba565b905061208e826128fc565b15806120a0575061209e8161291a565b155b156120b5576120ae83612927565b505061213a565b8151600160401b116120fc576040805162461bcd60e51b815260206004820152601b60248201526000805160206139c2833981519152604482015290519081900360640190fd5b600061211e82606001518460000151612119876101800151610d27565b612930565b90506121368460c0015161213183611783565b612952565b5050505b50565b6121456138de565b6121528260c001516128ba565b905061215c6138de565b6121698360c001516128ba565b9050612174826128fc565b158061218657506121848161291a565b155b15612194576120ae83612927565b600160401b8260000151600701106121e1576040805162461bcd60e51b815260206004820152601b60248201526000805160206139c2833981519152604482015290519081900360640190fd5b600061211e826060015184600001516121fe876101800151610d27565b61297c565b61220b6138de565b6122188260c001516128ba565b90506122226138de565b61222f8360c001516128ba565b905061223a826128fc565b158061224c575061224a8161291a565b155b1561225a576120ae83612927565b600160401b8260000151601f01106122a7576040805162461bcd60e51b815260206004820152601b60248201526000805160206139c2833981519152604482015290519081900360640190fd5b600061211e826060015184600001516122c4876101800151610d27565b612adb565b6122d16138de565b6122de8260c001516128ba565b90506122e86138de565b6122f58360c001516128ba565b90506122ff6138de565b61230c8460c001516128ba565b9050612317836128fc565b1580612329575061232782612c0e565b155b8061233a57506123388161291a565b155b156123505761234884612927565b50505061213a565b8251600160401b11612397576040805162461bcd60e51b815260206004820152601b60248201526000805160206139c2833981519152604482015290519081900360640190fd5b60006123be8260600151856000015185600001516123b9896101800151610d27565b612c19565b90506123d18560c00151612131836118ef565b5050505050565b6123e06138de565b6123ed8260c001516128ba565b90506123f76138de565b6124048360c001516128ba565b905061240e6138de565b61241b8460c001516128ba565b9050612426836128fc565b1580612438575061243682612c0e565b155b8061244957506124478161291a565b155b156124575761234884612927565b600160401b8360000151600701106124a4576040805162461bcd60e51b815260206004820152601b60248201526000805160206139c2833981519152604482015290519081900360640190fd5b60006123be8260600151856000015185600001516124c6896101800151610d27565b612c62565b6124d36138de565b6124e08260c001516128ba565b90506124ea6138de565b6124f78360c001516128ba565b90506125016138de565b61250e8460c001516128ba565b9050612519836128fc565b158061252b575061252982612c0e565b155b8061253c575061253a8161291a565b155b1561254a5761234884612927565b600160401b8360000151601f0110612597576040805162461bcd60e51b815260206004820152601b60248201526000805160206139c2833981519152604482015290519081900360640190fd5b60006123be8260600151856000015185600001516125b9896101800151610d27565b612dab565b6125c66138de565b6125d38260c001516128ba565b90506125dd6138de565b6125ea8360c001516128ba565b90506125f5826128fc565b158061260757506126058161291a565b155b15612615576120ae83612927565b81516127101015612629576120ae83612927565b8261014001515183610160015114156126a45761265c81606001518360000151612657866101800151610d27565b612e7d565b1561269b576040805162461bcd60e51b815260206004820152600a602482015269084aa8cbe988a9c8ea8960b31b604482015290519081900360640190fd5b6120ae83612927565b610160830151825161014085015160006126bf828585612ed1565b9050806126cb866111f0565b1461270a576040805162461bcd60e51b815260206004820152600a60248201526915d493d391d7d4d1539160b21b604482015290519081900360640190fd5b5060209201820120606094850180516040805180860192909252818101939093528251808203840181529601909152845194909101939093209092525050565b600080805b602081101561278257600882901b9150848185018151811061276d57fe5b016020015160f81c919091179060010161274f565b509392505050565b600081602001835110156127da576040805162461bcd60e51b815260206004820152601260248201527152656164206f7574206f6620626f756e647360701b604482015290519081900360640190fd5b50016020015190565b60008060208301611778858561278a565b6127fc6138de565b6040805160c0810182528481528151606081018352600080825260208083018290528451828152808201865293949085019390830191612852565b61283f6138de565b8152602001906001900390816128375790505b5090528152602001600060405190808252806020026020018201604052801561289557816020015b6128826138de565b81526020019060019003908161287a5790505b50815260006020820152600260408201526060019290925250919050565b6008101590565b6128c26138de565b6128ca6138de565b82602001516001846000015103815181106128e157fe5b60209081029190910101518351600019018452915050919050565b608081015160009060ff1615801561116457505051600160401b1190565b6080015160ff16600c1490565b61213a8161155c565b600061204f612948856020865b048560000151612eea565b6020855b06613058565b80826020015183600001518151811061296757fe5b60209081029190910101525080516001019052565b6040805160088082528183019092526000916060919060208201818036833701905050905060006129b6866020875b048660000151612eea565b9050602080860660080110612a895760006129dd876020885b046001018760400151612eea565b905060005b6018601f881660080301811015612a3157612a03838260208a5b0601613058565b60f81b848281518110612a1257fe5b60200101906001600160f81b031916908160001a9053506001016129e2565b506018601f8716600803015b6008811015612a8257612a5482602089840161294c565b60f81b848281518110612a6357fe5b60200101906001600160f81b031916908160001a905350600101612a3d565b5050612ad2565b60005b6008811015612ad057612aa282826020896129fc565b60f81b838281518110612ab157fe5b60200101906001600160f81b031916908160001a905350600101612a8c565b505b611fca82613065565b604080516020808252818301909252600091606091906020820181803683370190505090506000612b0e866020876129ab565b9050602080860660200110612bc7576000612b2b876020886129cf565b905060005b601f8716602003811015612b7957612b4b838260208a6129fc565b60f81b848281518110612b5a57fe5b60200101906001600160f81b031916908160001a905350600101612b30565b50601f86166008035b6020811015612a8257612b9982602089840161294c565b60f81b848281518110612ba857fe5b60200101906001600160f81b031916908160001a905350600101612b82565b60005b6020811015612ad057612be082826020896129fc565b60f81b838281518110612bef57fe5b60200101906001600160f81b031916908160001a905350600101612bca565b6080015160ff161590565b600080612c288660208761293d565b90506000612c3a8260208806876130a2565b90506000612c56886020890484886000015189602001516130e1565b98975050505050505050565b60006060612c6f84613187565b90506000612c7f876020886129ab565b905060208087066008011115612d615760005b6018601f881660080301811015612cda57612cd082602089840106858460180181518110612cbc57fe5b01602001516001600160f81b0319166131f1565b9150600101612c92565b50612cf4876020885b0483876000015188602001516130e1565b96506000612d04886020896129cf565b90506018601f8816600803015b6008811015612d3d57612d338260208a840106868460180181518110612cbc57fe5b9150600101612d11565b50612d59886020890460010183886040015189606001516130e1565b975050612da0565b60005b6008811015612d9057612d86828260208a0601858460180181518110612cbc57fe5b9150600101612d64565b50612d9d87602088612ce3565b96505b509495945050505050565b60006060612db884613187565b90506000612dc8876020886129ab565b905060208087066020011115612e5a5760005b601f8716602003811015612e0a57612e00828260208a5b0601858481518110612cbc57fe5b9150600101612ddb565b50612e1787602088612ce3565b96506000612e27886020896129cf565b9050601f87166020035b6020811015612d3d57612e508260208a840106868481518110612cbc57fe5b9150600101612e31565b60005b6020811015612d9057612e73828260208a612df2565b9150600101612e5d565b600080612e8c8560208661293d565b9050601f84165b6020811015612ebe57612ea68282613058565b15612eb6576000925050506111e9565b600101612e93565b506111e58560208604856000015161320d565b600061204f607b612ee58686866001613393565b613439565b6000815160001415612f5357612f006000611cf8565b8414612f4b576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b5060006111e9565b6000612f7283600081518110612f6557fe5b6020026020010151611cf8565b905060015b8351811015612fdc578460011660011415612fb057612fa9848281518110612f9b57fe5b602002602001015183613439565b9150612fd0565b612fcd82858381518110612fc057fe5b6020026020010151613439565b91505b600194851c9401612f77565b50848114613029576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b83156130395750600090506111e9565b8260008151811061304657fe5b60200260200101519150509392505050565b601f036008021c60ff1690565b600080805b835181101561309b57600882901b915083818151811061308657fe5b016020015160f81c919091179060010161306a565b5092915050565b600060606130af85613187565b90508260f81b8185815181106130c157fe5b60200101906001600160f81b031916908160001a9053506111e581613065565b60008151600314613139576040805162461bcd60e51b815260206004820152601760248201527f4241445f4e4f524d414c495a4154494f4e5f50524f4f46000000000000000000604482015290519081900360640190fd5b611fca868686868660008151811061314d57fe5b602002602001015160001c8760018151811061316557fe5b60200260200101518860028151811061317a57fe5b6020026020010151613465565b6040805160208082528183019092526060918391839160208201818036833701905050905060005b6020811015612782578260f81b8282601f03815181106131cb57fe5b60200101906001600160f81b031916908160001a90535060089290921c916001016131af565b600060606131fe85613187565b9050828185815181106130c157fe5b6000815160001415613276576132236000611cf8565b841461326e576040805162461bcd60e51b815260206004820152601560248201527432bc3832b1ba32b21032b6b83a3c90313ab33332b960591b604482015290519081900360640190fd5b5060016111e9565b600061328883600081518110612f6557fe5b9050600160606132966136f4565b905060015b855181101561332a5786600116600114156132d4576132cd8682815181106132bf57fe5b602002602001015185613439565b935061331e565b6132e484878381518110612fc057fe5b935082801561331b57508160018203815181106132fd57fe5b602002602001015186828151811061331157fe5b6020026020010151145b92505b600196871c960161329b565b50868314613377576040805162461bcd60e51b8152602060048201526015602482015274195e1c1958dd19590818dbdc9c9958dd081c9bdbdd605a1b604482015290519081900360640190fd5b851561338957600193505050506111e9565b5095945050505050565b6000602083116133c857845184106133b6576133af6000611cf8565b905061204f565b6133af6133c38686613795565b611cf8565b60006133dc86600286048781019086613393565b90506133e86000611cf8565b811480156133f35750825b15613410576134088686600287046001613393565b91505061204f565b60006134228787600288046000613393565b905061342e8183613439565b979650505050505050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b60008061347187611cf8565b905061347e898988612eea565b5060606134896136f4565b905060018751036001901b891061354d57876134a957899250505061342e565b60006134b48a6137ec565b88519091505b600182038110156134e2576134d88c846001840381518110612fc057fe5b9b506001016134ba565b5060015b60018203811015613538578a600116600114156135165761350f8360018303815181106132bf57fe5b935061352c565b61352984846001840381518110612fc057fe5b93505b60019a8b1c9a016134e6565b506135438b84613439565b935050505061342e565b60015b87518110156135cd5760008a60011660011461356c5783613581565b88828151811061357857fe5b60200260200101515b905060008b6001166001146135a95789838151811061359c57fe5b60200260200101516135ab565b845b90506135b78282613439565b60019c8d1c9c9095509290920191506135509050565b5087156135dc5750905061342e565b8086815181106135e857fe5b6020026020010151841415806135fc575085155b61364d576040805162461bcd60e51b815260206004820152601c60248201527f726967687420737562747265652063616e6e6f74206265207a65726f00000000604482015290519081900360640190fd5b600086156136645761365f8686613439565b613666565b855b9050861561367657600019909601955b80875b60018a510381101561369f5761369582858381518110612fc057fe5b9150600101613679565b508381146136e5576040805162461bcd60e51b815260206004820152600e60248201526d0caf0e0cac6e8cac840dac2e8c6d60931b604482015290519081900360640190fd5b509a9950505050505050505050565b604080518181526108208101825260609182919060208201610800803683370190505090506137236000611cf8565b8160008151811061373057fe5b602090810291909101015260015b604081101561378f5761377082600183038151811061375957fe5b6020026020010151836001840381518110612fc057fe5b82828151811061377c57fe5b602090810291909101015260010161373e565b50905090565b600080805b602081101561278257600882901b915060008185018651116137bd5760006137db565b85828601815181106137cb57fe5b01602001516001600160f81b0319165b60f81c92909217915060010161379a565b6000816137fb57506001610e1a565b613808600183901c6137ec565b6001019050610e1a565b6040518060a001604052806005906020820280368337509192915050565b604051806101c0016040528061384461391b565b815260200161385161391b565b81526000602082018190526040820181905260608201819052608082015260a00161387a613988565b8152602001613887613988565b81526000602082018190526040820181905260608083018190526080830182905260a083015260c09091015290565b6040518060800160405280606081526020016060815260200160608152602001606081525090565b6040518060c00160405280600081526020016138f86139a2565b815260606020820181905260006040830181905290820181905260809091015290565b60408051610120810190915260008152602081016139376138de565b81526020016139446138de565b81526020016139516138de565b815260200161395e6138de565b815260006020820181905260408201526060016139796138de565b8152602001600081525090565bfe5b604051806040016040528060008152602001606081525090565b604080516060808201835260008083526020830152918101919091529056fe62756666657220696e646578206d7573742062652036342d626974000000000075736520616e6f7468657220636f6e747261637420746f2068616e646c65206f74686572206f70636f646573a2646970667358221220b515fe7d16d810dbc330a01413e2870054c4b03eb10d47e20d3baa5657db5e5464736f6c634300060c0033"

// DeployOneStepProof2 deploys a new Ethereum contract, binding an instance of OneStepProof2 to it.
func DeployOneStepProof2(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OneStepProof2, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OneStepProof2Bin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// OneStepProof2 is an auto generated Go binding around an Ethereum contract.
type OneStepProof2 struct {
	OneStepProof2Caller     // Read-only binding to the contract
	OneStepProof2Transactor // Write-only binding to the contract
	OneStepProof2Filterer   // Log filterer for contract events
}

// OneStepProof2Caller is an auto generated read-only Go binding around an Ethereum contract.
type OneStepProof2Caller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Transactor is an auto generated write-only Go binding around an Ethereum contract.
type OneStepProof2Transactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Filterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OneStepProof2Filterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OneStepProof2Session is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OneStepProof2Session struct {
	Contract     *OneStepProof2    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OneStepProof2CallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OneStepProof2CallerSession struct {
	Contract *OneStepProof2Caller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// OneStepProof2TransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OneStepProof2TransactorSession struct {
	Contract     *OneStepProof2Transactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// OneStepProof2Raw is an auto generated low-level Go binding around an Ethereum contract.
type OneStepProof2Raw struct {
	Contract *OneStepProof2 // Generic contract binding to access the raw methods on
}

// OneStepProof2CallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OneStepProof2CallerRaw struct {
	Contract *OneStepProof2Caller // Generic read-only contract binding to access the raw methods on
}

// OneStepProof2TransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OneStepProof2TransactorRaw struct {
	Contract *OneStepProof2Transactor // Generic write-only contract binding to access the raw methods on
}

// NewOneStepProof2 creates a new instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2(address common.Address, backend bind.ContractBackend) (*OneStepProof2, error) {
	contract, err := bindOneStepProof2(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2{OneStepProof2Caller: OneStepProof2Caller{contract: contract}, OneStepProof2Transactor: OneStepProof2Transactor{contract: contract}, OneStepProof2Filterer: OneStepProof2Filterer{contract: contract}}, nil
}

// NewOneStepProof2Caller creates a new read-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Caller(address common.Address, caller bind.ContractCaller) (*OneStepProof2Caller, error) {
	contract, err := bindOneStepProof2(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Caller{contract: contract}, nil
}

// NewOneStepProof2Transactor creates a new write-only instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Transactor(address common.Address, transactor bind.ContractTransactor) (*OneStepProof2Transactor, error) {
	contract, err := bindOneStepProof2(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Transactor{contract: contract}, nil
}

// NewOneStepProof2Filterer creates a new log filterer instance of OneStepProof2, bound to a specific deployed contract.
func NewOneStepProof2Filterer(address common.Address, filterer bind.ContractFilterer) (*OneStepProof2Filterer, error) {
	contract, err := bindOneStepProof2(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OneStepProof2Filterer{contract: contract}, nil
}

// bindOneStepProof2 binds a generic wrapper to an already deployed contract.
func bindOneStepProof2(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OneStepProof2ABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2Raw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.OneStepProof2Caller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2Raw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2Raw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.OneStepProof2Transactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OneStepProof2 *OneStepProof2CallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OneStepProof2.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OneStepProof2 *OneStepProof2TransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OneStepProof2.Contract.contract.Transact(opts, method, params...)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Caller) ExecuteStep(opts *bind.CallOpts, _machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "executeStep", _machineFields, proof, bproof)

	outstruct := new(struct {
		Gas    uint64
		Fields [5][32]byte
	})

	outstruct.Gas = out[0].(uint64)
	outstruct.Fields = out[1].([5][32]byte)

	return *outstruct, err

}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2Session) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ExecuteStep is a free data retrieval call binding the contract method 0x3a06aeec.
//
// Solidity: function executeStep(bytes32[3] _machineFields, bytes proof, bytes bproof) view returns(uint64 gas, bytes32[5] fields)
func (_OneStepProof2 *OneStepProof2CallerSession) ExecuteStep(_machineFields [3][32]byte, proof []byte, bproof []byte) (struct {
	Gas    uint64
	Fields [5][32]byte
}, error) {
	return _OneStepProof2.Contract.ExecuteStep(&_OneStepProof2.CallOpts, _machineFields, proof, bproof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Caller) ParseProof(opts *bind.CallOpts, proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	var out []interface{}
	err := _OneStepProof2.contract.Call(opts, &out, "parseProof", proof)

	if err != nil {
		return *new([][32]byte), *new([][32]byte), *new([][32]byte), *new([][32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][32]byte)).(*[][32]byte)
	out1 := *abi.ConvertType(out[1], new([][32]byte)).(*[][32]byte)
	out2 := *abi.ConvertType(out[2], new([][32]byte)).(*[][32]byte)
	out3 := *abi.ConvertType(out[3], new([][32]byte)).(*[][32]byte)

	return out0, out1, out2, out3, err

}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2Session) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}

// ParseProof is a free data retrieval call binding the contract method 0x793deea3.
//
// Solidity: function parseProof(bytes proof) pure returns(bytes32[], bytes32[], bytes32[], bytes32[])
func (_OneStepProof2 *OneStepProof2CallerSession) ParseProof(proof []byte) ([][32]byte, [][32]byte, [][32]byte, [][32]byte, error) {
	return _OneStepProof2.Contract.ParseProof(&_OneStepProof2.CallOpts, proof)
}
