/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from 'ethers'
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from '@ethersproject/contracts'
import { BytesLike } from '@ethersproject/bytes'
import { Listener, Provider } from '@ethersproject/providers'
import { FunctionFragment, EventFragment, Result } from '@ethersproject/abi'

interface L1ArbitrumTestMessengerInterface extends ethers.utils.Interface {
  functions: {
    'setInboxUse(bool)': FunctionFragment
  }

  encodeFunctionData(functionFragment: 'setInboxUse', values: [boolean]): string

  decodeFunctionResult(functionFragment: 'setInboxUse', data: BytesLike): Result

  events: {
    'TxToL2(address,address,uint256,bytes)': EventFragment
  }

  getEvent(nameOrSignatureOrTopic: 'TxToL2'): EventFragment
}

export class L1ArbitrumTestMessenger extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this
  attach(addressOrName: string): this
  deployed(): Promise<this>

  on(event: EventFilter | string, listener: Listener): this
  once(event: EventFilter | string, listener: Listener): this
  addListener(eventName: EventFilter | string, listener: Listener): this
  removeAllListeners(eventName: EventFilter | string): this
  removeListener(eventName: any, listener: Listener): this

  interface: L1ArbitrumTestMessengerInterface

  functions: {
    setInboxUse(
      _shouldUseInbox: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>

    'setInboxUse(bool)'(
      _shouldUseInbox: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>
  }

  setInboxUse(
    _shouldUseInbox: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  'setInboxUse(bool)'(
    _shouldUseInbox: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>

  callStatic: {
    setInboxUse(
      _shouldUseInbox: boolean,
      overrides?: CallOverrides
    ): Promise<void>

    'setInboxUse(bool)'(
      _shouldUseInbox: boolean,
      overrides?: CallOverrides
    ): Promise<void>
  }

  filters: {
    TxToL2(
      _from: string | null,
      _to: string | null,
      _seqNum: BigNumberish | null,
      _data: null
    ): EventFilter
  }

  estimateGas: {
    setInboxUse(
      _shouldUseInbox: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>

    'setInboxUse(bool)'(
      _shouldUseInbox: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>
  }

  populateTransaction: {
    setInboxUse(
      _shouldUseInbox: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>

    'setInboxUse(bool)'(
      _shouldUseInbox: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>
  }
}
